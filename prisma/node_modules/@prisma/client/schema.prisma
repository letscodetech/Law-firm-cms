generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id          Int          @id @default(autoincrement())
  name        String
  dateOpened  DateTime
  status      String
  type        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  cases       Case[]
  caseDetails CaseDetails?
}

model Case {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  status      String
  clientId    Int
  client      Client   @relation(fields: [clientId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CaseDetails {
  id             Int      @id @default(autoincrement())
  caseNumber     String
  trackingNumber String?
  caseSummary    String?  @db.Text
  filingDate     String
  station        String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relation with Client
  client   Client @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId Int    @unique // One-to-one relationship with Client

  @@map("case_details")
}

model Folder {
  id         Int      @id @default(autoincrement())
  name       String
  parentId   Int? // Reference to a parent folder, null means it's a root folder
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  files      File[]
  subFolders Folder[] @relation("FolderParent") // Removed fields and references from here

  parent Folder? @relation("FolderParent", fields: [parentId], references: [id]) // Keep fields and references here
}

model File {
  id        Int      @id @default(autoincrement())
  fileName  String
  filePath  String
  fileSize  Int
  fileType  String
  folderId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  folder    Folder   @relation(fields: [folderId], references: [id])
}
